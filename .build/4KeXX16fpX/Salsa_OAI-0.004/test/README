NAME
    Salsa_OAI - Simple OAI data provider based on Dancer

VERSION
    version 0.004

SYNOPSIS
    This is a small webapp which acts as a OAI data provider based on
    HTTP::OAI::DataProvider::Simple and Tim Brody's HTTP::OAI.

FUNCTIONS
  config_check ();
    Run checks if Dancer's configuration make sense, e.g. if chunking
    enabled, it should also have the relevant information (e.g. chunk_dir).
    This check should run during initial start up and throw intelligble
    errors if it fails, so we can fix them right there and then and do not
    have to test all possibilities to discover them.

  $provider=init_provider();
    Initialize the data provider with settings either from Dancer's config
    if classic configuration information or from callbacks.

  welcome()
    Gets called from Dancer's routes to display html pages on Salsa_OAI

  Debug "Message";
    Use Dancer's debug function if available or else write to STDOUT.
    Register this callback during init_provider.

  Warning "Message";
    Use Dancer's warning function if available or pass message to perl's
    warn.

  my $library = salsa_setLibrary();
    Reads the setLibrary from dancer's config file and returns it in form of
    a HTTP::OAI::ListSet object( which can, of course, include one or more
    HTTP::OAI::Set objects ) .

      Background: setNames
      and setDescriptions are not stored with OAI headers,
      but instead in the setLibrary
      . HTTP::OAI::DataProvider::SetLibrary associates setSpecs with setNames
      and setDescriptions
      .

  my xslt_fn=salsa_locateXSL($prefix);
    locateXSL callback expects a metadataFormat prefix and will return the
    full path to the xsl which is responsible for this transformation. On
    failure: returns nothing.

FEATURES
    TODO Write new text

    This data provider is just one notch up from a static repository: - no
    database, instead header information is parsed to memory - metadata
    format freedom: on the fly conversations from native format to whatever
    external format you supply an XSLT transformation for, see below. - easy
    to maintain since simple - deployment freedom with dancer, see
    Dancer::Deployment - OAI-PMH Protocol version 2.0 - Sets: basically
    work, but not set hierarchies - compression. If deployed right, e.g.
    with PLACK::Middleware::Deflate should take care of that.

NOT SUPPORTED
- streaming. Currently request has to be finished to start transmit.
- Resumption tokens
- Deleted Headers
    Metadata Freedom: Salsa_OAI is agnostic concerning its metadata formats.
    Use XSLT 1.0 to tranform your native format in whatever you like.

SEE ALSO
    - Dancer at cpan or perldancer.org. - Some ideas concerning inheritance
    and abstracion derived from OCLC's OAIcat. - HTTP::OAI -
    HTTP::OAI::DataProvider

AUTHOR
    Maurice Mengel <mauricemengel@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2011 by Maurice Mengel.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

